/* eslint-disable */

/* prettier-ignore */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WeaponsImport } from './routes/weapons'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const AgentsLazyImport = createFileRoute('/agents')()
const WeaponWeaponIdLazyImport = createFileRoute('/weapon/$weaponId')()
const AgentAgentIdLazyImport = createFileRoute('/agent/$agentId')()

// Create/Update Routes

const AgentsLazyRoute = AgentsLazyImport.update({
  path: '/agents',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/agents.lazy').then((d) => d.Route))

const WeaponsRoute = WeaponsImport.update({
  path: '/weapons',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WeaponWeaponIdLazyRoute = WeaponWeaponIdLazyImport.update({
  path: '/weapon/$weaponId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/weapon.$weaponId.lazy').then((d) => d.Route),
)

const AgentAgentIdLazyRoute = AgentAgentIdLazyImport.update({
  path: '/agent/$agentId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/agent.$agentId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/weapons': {
      preLoaderRoute: typeof WeaponsImport
      parentRoute: typeof rootRoute
    }
    '/agents': {
      preLoaderRoute: typeof AgentsLazyImport
      parentRoute: typeof rootRoute
    }
    '/agent/$agentId': {
      preLoaderRoute: typeof AgentAgentIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/weapon/$weaponId': {
      preLoaderRoute: typeof WeaponWeaponIdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  WeaponsRoute,
  AgentsLazyRoute,
  AgentAgentIdLazyRoute,
  WeaponWeaponIdLazyRoute,
])
